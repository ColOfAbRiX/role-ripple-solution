---

#
# Passwords encryption
#

# The script encrypt_string.js creates different output every time it's run for
# the same password and this makes the file secrets.json to change. A change in
# a configuration file prompts Ansible to restart Ripple and this is something
# we don't want.

- name: "Read Existing Passwords"
  command: cat {{ ripple_solution_config_base }}/secrets.json
  register: secrets_file
  changed_when: false
  failed_when: false

- set_fact:
    ripple_connect_db_pass_idx:       0
    ripple_connect_rmq_pass_idx:      1
    ripple_connect_partners_pass_idx: 2
    existing_encrypted_passwords: "{{ secrets_file.stdout | list_encrypted_passwords }}"
    cleartext_passwords:          "{{ admin_key | list_clear_passwords(ripple_connect_db_pass, ripple_connect_rabbitmq.mq_password | default(omit), ripple_connect_partners) }}"

- name: "Decrypt Existing Passwords"
  shell: node {{ ripple_solution_scripts_base }}/decrypt_string.js {{ item.key }} <<< '{{ item.password }}'
  changed_when: false
  register: decrypted_passwords
  when: item.key != '' and
        item.password != ''
  with_items:
   - "{{ existing_encrypted_passwords }}"

- name: "Encrypt Passwords"
  shell: node {{ ripple_solution_scripts_base }}/encrypt_string.js {{ item.0.key }} <<< '{{ item.0.password }}'
  changed_when: false
  register: encrypted_passwords_output
  when: item.0.password != item.1.stdout | default('')
  with_together:
   - "{{ cleartext_passwords }}"
   - "{{ decrypted_passwords.results }}"

- set_fact:
    encrypted_passwords: "{{ encrypted_passwords_output.results }}"


#
# Passwords hashing
#

- name: "Hash Operator Passwords"
  shell: node {{ ripple_solution_scripts_base }}/hash_password.js <<< '{{ item.username }}:RippleSolution:{{ item.password }}'
  changed_when: false
  register: hashed_operator_passwords
  with_items:
   - "{{ ripple_connect_users | selectattr('type', 'equalto', 'operator') | list }}"

- name: "Hash Monitor Passwords"
  shell: node {{ ripple_solution_scripts_base }}/hash_password.js <<< '{{ item.username }}:RippleSolution:{{ item.password }}'
  changed_when: false
  register: hashed_monitor_passwords
  with_items:
   - "{{ ripple_connect_users | selectattr('type', 'equalto', 'monitor') | list }}"

- name: "Hash Custom Rate Operator Passwords"
  shell: node {{ ripple_solution_scripts_base }}/hash_password.js <<< '{{ item.username }}:RippleSolution:{{ item.password }}'
  changed_when: false
  register: hashed_custom_rate_operator_passwords
  with_items:
   - "{{ ripple_connect_users | selectattr('type', 'equalto', 'custom_rate_operator') | list }}"

- name: "Hash Partner Passwords"
  shell: node {{ ripple_solution_scripts_base }}/hash_password.js <<< '{{ item.username }}:RippleSolution:{{ item.password }}'
  changed_when: false
  register: hashed_partner_passwords
  with_items:
   - "{{ ripple_connect_partners | sum(attribute='partner_users', start=[]) | list }}"

#
# Read Keys and Fingerprints
#

- name: "Read Ripple Connect Secrets"
  shell: "cat {{ pia_path }}/{{ item }}.pia"
  register: ripple_connect_secrets
  changed_when: false
  with_items:
   - mac_key
   - external_access_token_key
   - client_access_token_key
   - ilp_key

- name: "Read Connector Secrets"
  shell: "cat {{ pia_path }}/{{ item }}.pia"
  register: connector_secrets
  changed_when: false
  with_items:
   - CONNECTOR_QUOTE_HMAC_KEY
  when: fx_connector_enabled | bool

- name: "Read Validator Secrets"
  shell: "cat {{ pia_path }}/validator_key_pair.pia"
  changed_when: false
  register: validator_key
  when: ilp_validator_enabled | bool

- name: "Read Fingerprints"
  shell: "cat {{ cert_path }}/{{ item.crt_prefix }}.fpt"
  changed_when: false
  when: item.enabled
  with_items:
   - "{{ cert_items }}"
  register: fingerprints


#
# Configuration files
#

- set_fact:
    client_credentials:
      operator:
        users:  "{{ ripple_connect_users | selectattr('type', 'equalto', 'operator') | list }}"
        hashes: "{{ hashed_operator_passwords }}"
      monitor:
        users:  "{{ ripple_connect_users | selectattr('type', 'equalto', 'monitor') | list }}"
        hashes: "{{ hashed_monitor_passwords }}"
      partner:
        users:  "{{ ripple_connect_partners | sum(attribute='partner_users', start=[]) | list }}"
        hashes: "{{ hashed_partner_passwords }}"
      custom_rate_operator:
        users:  "{{ ripple_connect_users | selectattr('type', 'equalto', 'custom_rate_operator') | list }}"
        hashes: "{{ hashed_custom_rate_operator_passwords }}"

- name: "Clean Examples"
  shell: "rm -f {{ ripple_solution_config_base }}/*example*"
  changed_when: false

- name: "Install Configuration Files"
  template:
    src:    "ripple-solution/{{ item }}.j2"
    dest:   "{{ ripple_solution_config_base }}/{{ item }}"
    mode:   '0644'
    force:  yes
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  register: config_files_status
  with_items:
   - config-ilp.json
   - config.json
   - database.json
   - entities.json
   - secrets.json
   - server.json
