---

- set_fact:
    cert_path: "{{ ripple_solution_cert_base }}/crt"
    key_path:  "{{ ripple_solution_cert_base }}/key"
    csr_path:  "{{ ripple_solution_cert_base }}/csr"

- set_fact:
    ca_cert:   "{{ cert_path }}/{{ ripple_solution_ca_prefix }}.crt"
    ca_key:    "{{ key_path }}/{{ ripple_solution_ca_prefix }}.key"

- name: "Create Required Directories"
  file:
    path:   "{{ item.path }}"
    state:  directory
    mode:   "{{ item.mode }}"
    force:  yes
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  with_items:
   - { path: "{{ ripple_solution_cert_base }}", mode: '0755' }
   - { path: "{{ cert_path }}", mode: '0755' }
   - { path: "{{ key_path }}",  mode: '0750' }
   - { path: "{{ csr_path }}",  mode: '0750' }

#
# Root CA Certificate
#

- name: "OpenSSL Configuration"
  template:
    src:    "openssl.cnf.j2"
    dest:   "{{ ripple_solution_config_base }}/openssl.cnf"
    mode:   '0644'
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t

- name: "Check CA Certificate"
  stat: path="{{ ca_cert }}"
  register: ca_stat

- name: "Ensure we can overwrite existing key"
  file: path="{{ item }}" mode="u+w"
  with_items:
   - "{{ ca_cert }}"
   - "{{ ca_key }}"
  ignore_errors: true

- name: "Create Certification Authority Certificate"
  shell: umask 337; openssl req -nodes -new -x509 -days 9999 -sha256 -config "{{ ripple_solution_config_base }}/openssl.cnf" -keyout "{{ ca_key }}" -out "{{ ca_cert }}"
  when: not ca_stat.stat.exists

- name: "Set permissions on CA"
  file: path="{{ ca_cert }}" mode="go+r"

#
# Other SSL Certificates
#

- set_fact:
    cert_items:
     - "{{ ripple_solution_admin_crt_prefix }}"
     - "{{ fx_connector_crt_prefix }}"
     - "{{ ledger_crt_prefix }}"
     - "{{ ripple_connect_crt_prefix }}"
     - "{{ validator_crt_prefix }}"
    admin_crt_idx:          0
    fx_connector_crt_idx:   1
    ledger_crt_idx:         2
    ripple_connect_crt_idx: 3
    validator_crt_idx:      4

- name: "Read Key Info"
  stat: path="{{ key_path }}/{{ item }}-key.pem"
  with_items:
   - "{{ cert_items }}"
  register: key_stat

- name: "Create Private Key"
  shell: openssl genrsa -out "{{ key_path }}/{{ item.item }}-key.pem" 4096
  with_items:
   - "{{ key_stat.results }}"
  when: not item.stat.exists

- name: "Create CSR"
  shell: openssl req -sha256 -new -key "{{ key_path }}/{{ item.item }}-key.pem" -out "{{ csr_path }}/{{ item.item }}-csr.pem" -subj "/CN={{ ansible_fqdn }}"
  with_items:
   - "{{ key_stat.results }}"
  when: not item.stat.exists

- name: "Sign CSR and Create Certificate"
  command: openssl x509 -req -sha256 -days 9999 -in "{{ csr_path }}/{{ item.item }}-csr.pem" -CA "{{ ca_cert }}" -CAkey "{{ ca_key }}" -CAcreateserial -out "{{ cert_path }}/{{ item.item }}-crt.pem"
  with_items:
   - "{{ key_stat.results }}"
  when: not item.stat.exists

#
# Fingerprints
#

- name: "SHA-256 Fingerprints"
  shell: openssl x509 -in "{{ cert_path }}/{{ item }}-crt.pem" -noout -fingerprint -sha256
  with_items:
   - "{{ cert_items }}"
  register: fingerprints

#
# Key Pairs Creation
#

- name: "Secret Keys"
  shell: "node /opt/ripple-solution/scripts/secret_key_generator.js > {{ key_path }}/{{ item }}.pia"
  args:
    creates: "{{ key_path }}/{{ item }}.pia"
  with_items:
   - mac_key
   - external_access_token_key
   - client_access_token_key
   - ilp_key

- name: "Read Secret Keys"
  shell: "cat {{ key_path }}/{{ item }}.pia"
  register: ripple_connect_secrets
  with_items:
   - mac_key
   - external_access_token_key
   - client_access_token_key
   - ilp_key


- name: "Connector Secrets"
  shell: "node /opt/ripple-solution/scripts/secret_key_generator.js > {{ key_path }}/{{ item }}.pia"
  args:
    creates: "{{ key_path }}/{{ item }}.pia"
  with_items:
   - CONNECTOR_QUOTE_HMAC_KEY
  when: fx_connector_enabled | bool

- name: "Read Connector Secrets"
  shell: "cat {{ key_path }}/{{ item }}.pia"
  register: connector_secrets
  with_items:
   - CONNECTOR_QUOTE_HMAC_KEY
  when: fx_connector_enabled | bool


- name: "Validator Secrets"
  shell: "node /opt/ripple-solution/scripts/ed25519_key_pair_generator.js > {{ key_path }}/validator_key_pair.pia"
  args:
    creates: "{{ key_path }}/validator_key_pair.pia"
  when: ilp_validator_enabled | bool

- name: "Read Secrets"
  shell: "cat {{ key_path }}/validator_key_pair.pia"
  register: validator_key
  when: ilp_validator_enabled | bool
