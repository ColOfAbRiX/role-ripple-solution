---

- set_fact:
    crypto_directories:
     - { path: "{{ ripple_solution_cert_base }}", mode: '0755' }
     - { path: "{{ cert_ext_path }}",  mode: '0755' }
     - { path: "{{ cert_path }}", mode: '0755' }
     - { path: "{{ key_path }}",  mode: '0750' }
     - { path: "{{ csr_path }}",  mode: '0750' }
     - { path: "{{ pia_path }}",  mode: '0750' }

- name: "Reset Crypto Directories"
  file: path="{{ ripple_solution_cert_base }}" state=absent
  when: ripple_solution_reset | default(False) | bool

- name: "Create Crypto Directories"
  file: path="{{ item.path }}" state=directory mode="{{ item.mode }}"
  with_items:
   - "{{ crypto_directories }}"

- name: "OpenSSL Configuration"
  template:
    src:    "openssl/{{ item }}.j2"
    dest:   "{{ ripple_solution_config_base }}/{{ item }}"
    mode:   '0644'
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  with_items:
   - openssl-host_ca.cnf
   - openssl-cert.cnf

- name: "Copy Existing Certificates"
  copy:
    src:    "{{ item }}"
    dest:   "{{ cert_path }}/{{ item | basename }}"
    mode:   '0644'
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  with_items:
   - "{{ ripple_solution_use_certs }}"

- name: "Copy Existing Keys"
  copy:
    src:    "{{ item }}"
    dest:   "{{ key_path }}/{{ item | basename }}"
    mode:   '0400'
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  with_items:
   - "{{ ripple_solution_use_keys }}"


#
# Root CA Certificate
#

- name: "Create Certification Authority Certificate"
  shell: |
    openssl req \
      -new -nodes -x509 -days 36524 \
      -keyout "{{ ca_key }}" \
      -out "{{ ca_cert }}"
  args:
    creates: "{{ ca_cert }}"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-host_ca.cnf"
  register: new_root_ca_status

- name: "Reset Existing Certificates"
  file: path="{{ item.1.path }}/{{ item.0.prefix }}{{ item.1.postfix }}" state=absent
  when: new_root_ca_status | changed
  with_nested:
   - "{{ cert_items }}"
   - - { path: "{{ key_path }}",  postfix: '-key.pem' }
     - { path: "{{ cert_path }}", postfix: '-crt.pem' }


#
# Other SSL Certificates
#

- set_fact:
    cert_items:
     - { prefix: "{{ ripple_solution_admin_crt_prefix }}", check: true }
     - { prefix: "{{ fx_connector_crt_prefix }}",   check: "{{ fx_connector_enabled | default(False) | bool }}" }
     - { prefix: "{{ ledger_crt_prefix }}",         check: "{{ ilp_ledgers_info | default([]) | length > 0 }}" }
     - { prefix: "{{ ripple_connect_crt_prefix }}", check: "{{ ripple_connect_enabled | default(False) | bool }}" }
     - { prefix: "{{ validator_crt_prefix }}",      check: "{{ ilp_validator_enabled | default(False) | bool }}" }
    admin_crt_idx:          0
    fx_connector_crt_idx:   1
    ledger_crt_idx:         2
    ripple_connect_crt_idx: 3
    validator_crt_idx:      4

- name: "Create Private Key"
  shell: openssl genrsa -out "{{ key_path }}/{{ item.prefix }}-key.pem" 2048
  args:
    creates: "{{ key_path }}/{{ item.prefix }}-key.pem"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-cert.cnf"
  when: item.check
  with_items:
   - "{{ cert_items }}"

- name: "Create CSR"
  shell: |
    openssl req \
     -sha256 -new \
     -key "{{ key_path }}/{{ item.prefix }}-key.pem" \
     -out "{{ csr_path }}/{{ item.prefix }}-csr.pem" \
     -subj "/CN={{ ansible_fqdn }}"
  args:
    creates: "{{ cert_path }}/{{ item.prefix }}-crt.pem"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-cert.cnf"
  when: item.check
  with_items:
   - "{{ cert_items }}"

- name: "Create Certificate from CSR"
  shell: |
    openssl x509 \
      -sha256 -days 1826 \
      -req  -in "{{ csr_path }}/{{ item.prefix }}-csr.pem" \
      -CA "{{ ca_cert }}" \
      -CAkey "{{ ca_key }}" \
      -CAcreateserial \
      -out "{{ cert_path }}/{{ item.prefix }}-crt.pem"
  args:
    creates: "{{ cert_path }}/{{ item.prefix }}-crt.pem"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-cert.cnf"
  when: item.check
  with_items:
   - "{{ cert_items }}"


#
# Fingerprints
#

- name: "Certificate Fingerprints"
  shell: |
    openssl x509 \
      -in "{{ cert_path }}/{{ item.prefix }}-crt.pem" \
      -noout \
      -fingerprint -sha256 | \
      awk -F'=' '{ print $2 }' > {{ cert_path }}/{{ item.prefix }}.fpt
  args:
    creates: "{{ cert_path }}/{{ item.prefix }}.fpt"
  when: item.check
  with_items:
   - "{{ cert_items }}"


#
# Key Pairs Creation
#

- set_fact:
    secret_key_files:
     - { name: mac_key,                   script: secret_key_generator.js,    check: "{{ ripple_connect_enabled | default(False) | bool }}" }
     - { name: external_access_token_key, script: secret_key_generator.js,    check: "{{ ripple_connect_enabled | default(False) | bool }}" }
     - { name: client_access_token_key,   script: secret_key_generator.js,    check: "{{ ripple_connect_enabled | default(False) | bool }}" }
     - { name: ilp_key,                   script: secret_key_generator.js,    check: "{{ ripple_connect_enabled | default(False) | bool }}" }
     - { name: CONNECTOR_QUOTE_HMAC_KEY,  script: secret_key_generator.js,    check: "{{ fx_connector_enabled | default(False) | bool }}" }
     - { name: validator_key_pair,        script: ed25519_key_pair_generator, check: "{{ ilp_validator_enabled | default(False) | bool }}" }

- name: "Secret Keys"
  shell: node /opt/ripple-solution/scripts/{{ item.script }} > {{ pia_path }}/{{ item.name }}.pia
  args:
    creates: "{{ pia_path }}/{{ item.name }}.pia"
  when: item.check
  with_items:
   - "{{ secret_key_files }}"


#
# Security and Permissions
#

- name: "Directories and Files Ownership"
  file:
    path:   "{{ item.path }}"
    state:  directory
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
    recurse: yes
  with_items:
   - "{{ crypto_directories }}"

- name: "Root CA Key Permissions"
  file: path="{{ ca_key }}" mode="0400"

- name: "Other Keys Permissions"
  file: path="{{ key_path }}/{{ item.prefix }}-key.pem" mode="0400"
  when: item.check
  with_items:
   - "{{ cert_items }}"

- name: "Secret Files Permissions"
  file: path="{{ pia_path }}/{{ item.name }}.pia" mode="0400"
  when: item.check
  with_items:
   - "{{ secret_key_files }}"
