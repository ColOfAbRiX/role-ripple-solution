---

- set_fact:
    cert_items:    "{{ (ripple_solution_info + [{'crt_prefix': ripple_solution_admin_crt_prefix, 'enabled': True}]) | list }}"
    admin_crt_idx: "{{ ripple_solution_info | length }}"


#
# Directories
#

- set_fact:
    crypto_directories:
     - { path: "{{ ripple_solution_cert_base }}", mode: '0755' }
     - { path: "{{ cert_ext_path }}",  mode: '0755' }
     - { path: "{{ cert_path }}", mode: '0755' }
     - { path: "{{ key_path }}",  mode: '0750' }
     - { path: "{{ csr_path }}",  mode: '0750' }
     - { path: "{{ pia_path }}",  mode: '0750' }
    existing_crypto_objects:
     - objects: "{{ ripple_solution_use_certs }}"
       where:   "{{ cert_path }}"
       mode:    '0644'
     - objects: "{{ ripple_solution_use_keys }}"
       where:   "{{ key_path }}"
       mode:    '0400'
     - objects: "{{ ripple_solution_use_remote_certs }}"
       where:   "{{ cert_ext_path }}"
       mode:    '0644'

- name: "Reset Crypto Directories"
  file: path="{{ ripple_solution_cert_base }}" state=absent
  when: ripple_solution_reset_crypto | default(False) | bool

- name: "Create Crypto Directories"
  file: path="{{ item.path }}" state=directory mode="{{ item.mode }}"
  with_items:
   - "{{ crypto_directories }}"

- name: "OpenSSL Configuration"
  template:
    src:    "openssl/{{ item }}.j2"
    dest:   "{{ ripple_solution_config_base }}/{{ item }}"
    mode:   '0644'
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  with_items:
   - openssl-host_ca.cnf
   - openssl-cert.cnf


#
# Existing objects
#

- name: "Copy Existing Crypto Objects"
  copy:
    src:    "{{ item.1 }}"
    dest:   "{{ item.0.where }}/{{ item.1 | basename }}"
    mode:   "{{ item.0.mode }}"
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
  register: existing_certs_status
  with_subelements:
   - "{{ existing_crypto_objects }}"
   - objects


#
# Root CA Certificate
#

- name: "Create Certification Authority Certificate"
  shell: |
    openssl req \
      -new -nodes -x509 -days 36524 \
      -keyout "{{ ca_key }}" \
      -out "{{ ca_cert }}"
  args:
    creates: "{{ ca_cert }}"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-host_ca.cnf"
  register: new_root_ca_status

- name: "Reset Existing Certificates"
  file: path="{{ item.1.path }}/{{ item.0.crt_prefix }}{{ item.1.postfix }}" state=absent
  when: new_root_ca_status | changed
  with_nested:
   - "{{ cert_items }}"
   - - { path: "{{ key_path }}",  postfix: '-key.pem' }
     - { path: "{{ cert_path }}", postfix: '-crt.pem' }


#
# Other SSL Certificates
#

- name: "Create Private Key"
  shell: openssl genrsa -out "{{ key_path }}/{{ item.crt_prefix }}-key.pem" 2048
  args:
    creates: "{{ key_path }}/{{ item.crt_prefix }}-key.pem"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-cert.cnf"
  when: item.enabled
  with_items:
   - "{{ cert_items }}"

- name: "Create CSR"
  shell: |
    openssl req \
     -sha256 -new \
     -key "{{ key_path }}/{{ item.crt_prefix }}-key.pem" \
     -out "{{ csr_path }}/{{ item.crt_prefix }}-csr.pem" \
     -subj "/CN={{ item.host | default(ansible_fqdn) }}"
  args:
    creates: "{{ cert_path }}/{{ item.crt_prefix }}-crt.pem"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-cert.cnf"
  when: item.enabled
  with_items:
   - "{{ cert_items }}"

- name: "Create Certificate from CSR"
  shell: |
    openssl x509 \
      -sha256 -days 1826 \
      -req  -in "{{ csr_path }}/{{ item.crt_prefix }}-csr.pem" \
      -CA "{{ ca_cert }}" \
      -CAkey "{{ ca_key }}" \
      -CAcreateserial \
      -out "{{ cert_path }}/{{ item.crt_prefix }}-crt.pem"
  args:
    creates: "{{ cert_path }}/{{ item.crt_prefix }}-crt.pem"
  environment:
    OPENSSL_CONF: "{{ ripple_solution_config_base }}/openssl-cert.cnf"
  register: created_certs_status
  when: item.enabled
  with_items:
   - "{{ cert_items }}"


#
# Fingerprints
#

- name: "Certificate Fingerprints"
  shell: |
    openssl x509 \
      -in "{{ cert_path }}/{{ item.crt_prefix }}-crt.pem" \
      -noout \
      -fingerprint -sha256 | \
      awk -F'=' '{ print $2 }' > {{ cert_path }}/{{ item.crt_prefix }}.fpt
  when: item.enabled
  changed_when: false
  with_items:
   - "{{ cert_items }}"

#
# Key Pairs Creation
#

- set_fact:
    secret_key_files:
     - { name: mac_key,                   enabled: "{{ ripple_connect_info.enabled }}" }
     - { name: external_access_token_key, enabled: "{{ ripple_connect_info.enabled }}" }
     - { name: client_access_token_key,   enabled: "{{ ripple_connect_info.enabled }}" }
     - { name: ilp_key,                   enabled: "{{ ripple_connect_info.enabled }}" }
     - { name: CONNECTOR_QUOTE_HMAC_KEY,  enabled: "{{ fx_connector_info.enabled }}" }
    ed25519_key_files:
     - { name: validator_key_pair,        enabled: "{{ ilp_validator_info.enabled }}" }

- name: "Create Secret Keys"
  shell: node {{ ripple_solution_scripts_base }}/secret_key_generator.js > {{ pia_path }}/{{ item.name }}.pia
  args:
    creates: "{{ pia_path }}/{{ item.name }}.pia"
  when: item.enabled
  with_items:
   - "{{ secret_key_files }}"

- name: "Create Ed25519 Keys"
  shell: node {{ ripple_solution_scripts_base }}/ed25519_key_pair_generator.j2 > {{ pia_path }}/{{ item.name }}.pia
  args:
    creates: "{{ pia_path }}/{{ item.name }}.pia"
  when: item.enabled
  with_items:
   - "{{ ed25519_key_files }}"


#
# Security and Permissions
#

- name: "Files Permission and Ownership"
  file:
    path:   "{{ item.path }}"
    state:  directory
    owner:  "{{ ripple_solution_user }}"
    group:  "{{ ripple_solution_group }}"
    seuser: system_u
    serole: object_r
    setype: usr_t
    recurse: yes
  with_items:
   - "{{ crypto_directories }}"

- name: "Root CA Key Permissions"
  file: path="{{ ca_key }}" mode="0400"

- name: "Other Keys Permissions"
  file: path="{{ key_path }}/{{ item.crt_prefix }}-key.pem" mode="0400"
  when: item.enabled
  with_items:
   - "{{ cert_items }}"

- name: "Secret Files Permissions"
  file: path="{{ pia_path }}/{{ item.name }}.pia" mode="0400"
  when: item.enabled
  with_items:
   - "{{ (secret_key_files + ed25519_key_files) | list }}"
