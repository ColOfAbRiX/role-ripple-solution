---

- set_fact:
    knex_root: "{{ ripple_solution_base }}/knexsql"
    knex_cmd:  "node {{ ripple_solution_base }}/knexsql/index.js"

- name: "Copy KNEXSQL Tools"
  copy:
    src:   knexsql
    dest:  "{{ ripple_solution_base }}"
    force: yes
    mode:  '0644'
    directory_mode: '0755'

- name: "Install KNEXSQL Tools"
  command: npm install
  args:
    chdir:   "{{ knex_root }}"
    creates: "{{ knex_root }}/node_modules"


- name: "Learn Schema Version"
  shell: "ls {{ ripple_solution_schema_base }}/*.sql | grep -Eo '[0-9]+\\.[0-9]+\\.[0-9]+' | sort | uniq"
  args:
    chdir: "{{ ripple_solution_schema_base }}"
  changed_when: false
  register: schema_version

- name: "Uniform SQL Script Version"
  file:
    src:  "{{ ripple_solution_schema_base }}/{{ item }}-{{ schema_version.stdout }}.sql"
    dest: "{{ ripple_solution_schema_base }}/{{ item }}.sql"
    state: link
    force: yes
  with_items:
   - ripple-connect
   - validator
   - connector
   - ledger


- name: "Check DB Initialized"
  shell: "{{ knex_cmd }} <<< 'SELECT * FROM {{ item.db_check_table }};'"
  environment:
    KNEXSQL_DB: "{{ item.db_admin_string }}"
  changed_when: false
  failed_when: false
  register: db_present
  when: item.enabled and
        item.cluster_run
  with_items:
   - "{{ ripple_solution_info }}"

- name: "Initialize Database"
  shell: "{{ knex_cmd }} < {{ ripple_solution_schema_base }}/{{ item.0.db_sql_file }}"
  environment:
    KNEXSQL_DB: "{{ item.0.db_admin_string }}"
  register: result
  failed_when: "'Error' in result.stderr or
                'error' in result.stderr or
                'must be owner' in result.stderr"
  when: "item.0.enabled and
         item.0.cluster_run and
         'does not exist' in item.1.stderr"
  with_together:
   - "{{ ripple_solution_info }}"
   - "{{ db_present.results }}"
